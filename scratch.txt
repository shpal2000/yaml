sudo hostnamectl set-hostname <kube-master | kube-node1 | kube-node2>

sudo apt update
sudo apt upgrade

sudo apt -y install curl apt-transport-https

curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add

echo  "deb https://apt.kubernetes.io/ kubernetes-xenial main" >> ~/kubernetes.list
sudo mv ~/kubernetes.list /etc/apt/sources.list.d/
sudo apt update

sudo apt -y install kubelet kubeadm kubectl kubernetes-cni
sudo apt-mark hold kubelet kubeadm kubectl

sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
sudo swapoff -a



sudo apt install -y gnupg2 software-properties-common ca-certificates
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
sudo apt update
sudo apt install -y containerd.io docker-ce docker-ce-cli
sudo mkdir -p /etc/systemd/system/docker.service.d

sudo tee /etc/docker/daemon.json <<EOF
{
    "exec-opts": ["native.cgroupdriver=systemd"],
    "log-driver": "json-file",
    "log-opts": {
        "max-size": "100m"
    },
    "storage-driver": "overlay2"
}
EOF


sudo systemctl daemon-reload
sudo systemctl restart docker
sudo systemctl enable docker

sudo sysctl --system


#master node <<<<

sudo systemctl enable kubelet

sudo kubeadm config images pull

sudo kubeadm init \
    --pod-network-cidr=192.168.0.0/16 \
    --control-plane-endpoint=<dns_name>

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

# note for worker node: kubeadm join <>:<> --token <> --discovery-token-ca-cert-hash sha256:<>


kubectl create -f https://docs.projectcalico.org/manifests/tigera-operator.yaml
kubectl create -f https://docs.projectcalico.org/manifests/custom-resources.yaml

#watch kubectl get pods --all-namespaces
#kubectl get nodes
#note: master node ready

#master node >>>>


#worker node <<<<
kubeadm join <>:<> --token <> --discovery-token-ca-cert-hash sha256:<>
#worker node >>>>


------


kubectl taint nodes --all node-role.kubernetes.io/master-

kubectl label nodes kube-master tgid=kube-master
kubectl label nodes kube-node1 tgid=kube-node1
kubectl label nodes kube-node2 tgid=kube-node2


---


Clone this GitHub repository: https://github.com/k8snetworkplumbingwg/multus-cni.git
apply a daemonset which installs Multus using to kubectl from this repo. 
From the root directory of the clone, apply the daemonset YAML file:

cat ./deployments/multus-daemonset-thick-plugin.yml | kubectl apply -f -


---
https://github.com/weaveworks/weave/blob/master/site/kubernetes/kube-addon.md

Before installing Weave Net, you should make sure the following ports are not blocked by your 
firewall: TCP 6783 and UDP 6783/6784.

kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"


---

npm config set strict-ssl false

---
sudo docker image build tlspack/tlsperf:latest .
sudo docker push tlspack/tlsperf:latest

---

sass --sourcemap=none sass/mystyles.scss:public/assets/mystyles.css


---

curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
nvm install node 17.4.0 --default 17.4.0

netstat -ltnp | grep -w ':30027'

---

df -hT

lsblk


sudo growpart /dev/xvda 1
sudo resize2fs /dev/xvda1

lsblk

df -h
